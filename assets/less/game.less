@import "config.less";

@grid-width: 700px;
@sidebar-width: @width - @grid-width;

#game-cover {
	width: @width;
	height: @height;
	background: gray;
	opacity: 0.8;
	display: none;
	position: absolute;
}

#game {
	position: relative;
	display: none;

	#grid, #sidebar {
		position: absolute;
	}

	#grid {
		left: 0px;
		background: pink;
		width: @grid-width;
		height: @height;
		display: inline-block;

		.inner {
			display: table;
			height: 100%;
			width: 100%;

			.inner2 {
				display:table-cell;
				vertical-align:middle;

				.grid {
					background: orange;
					margin: auto;
				}

				// helper class, will never show up in resulting css
				// will be called as long the index is above 0
				.loopingClass (@index) when (@index > 0) {

					// create the actual css selector, example will result in
					// .myclass_30, .myclass_28, .... , .myclass_1
					(~".grid@{index}") {
						// your resulting css
						width: @blockSize * @index;
						height: @blockSize * @index;
					}

					// next iteration
					.loopingClass(@index - 1);
				}
				.loopingClass (0) {} // Loop down to 0
				.loopingClass (@maxGridSize); // From maxGridZie
			}
		}
	}

	#sidebar {
		right: 0px;
		background: red;
		width: @sidebar-width;
		height: @height;
		display: inline-block;

		.inner {
			padding: 10px;
			padding-top: 0px;

			.time, .difficulty {
				text-align:center;
				font-size: 30px;
				strong {
					display: block;
				}
				span {
					font-size: 50px;
					font-weight: bold;
				}
			}

			button {
				width: 100%;
				height: 30px;
				font-size: 20px;
			}
		}
	}
}